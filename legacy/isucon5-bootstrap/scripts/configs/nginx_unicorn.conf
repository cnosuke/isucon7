user  nginx;
worker_processes  4; # コア数とあわせる
error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

events {
    worker_connections  4096;
    multi_accept on;
    use epoll; # カーネル2.6以上なら使うべき
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  off;
    #access_log  /var/log/nginx/access.log  main;

    sendfile        on; # on ならファイルの読み込みとレスポンスの送信に sendfile() APIを使うから速い
    tcp_nopush     on; # on なら http レスポンスヘッダをひとつの TCP パケットで送る。上のがonであるのが前提。

    # isucon3 予選ので試したけどほぼ効果無かったので75にしとく
    # ただ実運用では効果あること多いみたいなので留意。ベンチツールの特性に依存しそう。
    keepalive_timeout  75;
    #keepalive_timeout  2;
    #keepalive_requests 100; # 上行が>0の時のみ設定できる

    upstream sinatra-unicorn {
        server localhost:3000;
        #server unix:/tmp/sinatra.sock;
    }

    upstream varnish {
        server localhost:6081;
	#server localhost:3000;
        #server unix:/tmp/sinatra.sock;
    }

    server {
    	# Varnishつかう時は変える
        listen 80;
        gzip  on;
        gzip_vary on;
        gzip_min_length 500;
	gzip_http_version 1.0;
        gzip_comp_level   2;

        # server_name localhost;
        server_tokens off;

        client_max_body_size 4G;
        root /home/isucon/isucon2/webapp/ruby/public;
        error_log /home/isucon/isucon2/webapp/ruby/log/nginx_error.log;

        try_files $uri $uri.html $uri/index.html @unicorn;

        location @unicorn {
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_pass http://sinatra-unicorn;
            proxy_redirect off;

            set $do_not_cache 0;

            # POST or HEAD ?
            if ($request_method != "GET") {
              set $do_not_cache 1;
            }

            # ignore cache uri
            # if ($uri !~* ".(foo|hoge)$") {
            #  set $do_not_cache 1;
            # }

            proxy_no_cache       $do_not_cache;
            proxy_cache_bypass   $do_not_cache;
            proxy_ignore_headers Cache-Control;
            proxy_cache_key      $scheme$proxy_host$uri$is_args$args;
            proxy_cache_valid    200 1d;
        }

        location ~ ^/(css|image|js|favicon)/ {
            gzip_static on;
            # log_not_found off;
            expires     max;
            add_header  Cache-Control public;
        }

	location ~ (^/(ticket|artist)/|^/$) {
	    proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_pass http://varnish;
            proxy_redirect off;
	}

        # error_page 500 502 503 504 /500.xml;
        # location = /500.xml {
        #     root /path_to_app/public;
        # }
    }
}
